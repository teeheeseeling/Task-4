/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import com.sun.glass.events.KeyEvent;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author see-l
 */
public class mainMenu extends javax.swing.JFrame {

    /**
     * Creates new form mainMenu
     */
    public mainMenu() {
        initComponents();
        setLocationRelativeTo(null);
        setSize(565, 255);
        visibleA(false);
        txtPassword.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txtChainLength = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtHashTable = new javax.swing.JTextField();
        txtHash = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPwLength = new javax.swing.JTextField();
        txtCharSet = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnCrack = new javax.swing.JButton();
        txtChainTable = new javax.swing.JTextField();
        btnCrackRainbow = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Chain Length");

        txtChainLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChainLengthKeyTyped(evt);
            }
        });

        jLabel5.setText("Hash Table");

        jLabel6.setText("Hash");

        jLabel7.setText("Password Found");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setText("Password Length");

        jLabel2.setText("Character Set");

        txtPwLength.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPwLengthKeyTyped(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnSubmit.setText("Generate");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        jLabel3.setText("Chain Per Table");

        btnCrack.setText("Crack it!");
        btnCrack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrackActionPerformed(evt);
            }
        });

        txtChainTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtChainTableKeyTyped(evt);
            }
        });

        btnCrackRainbow.setText("Crack Rainbow");
        btnCrackRainbow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrackRainbowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCrack, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnCrackRainbow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSubmit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCharSet, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtPwLength, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(txtChainTable, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtChainLength))
                                    .addComponent(txtHashTable)
                                    .addComponent(txtHash)
                                    .addComponent(txtPassword))))))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtPwLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChainTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtChainLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCharSet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnSubmit)
                    .addComponent(btnCrackRainbow))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtHashTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnCrack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearField();
    }//GEN-LAST:event_btnClearActionPerformed

    int pwLength = 0;
    String charset = "";
    String rmDuplicateChar = "";
    int chainTable = 0;
    int chainLength = 0;
    String file = "";
    String hash = "";

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (txtPwLength.getText().isEmpty() || txtCharSet.getText().isEmpty() || txtChainTable.getText().isEmpty() || txtChainLength.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please leave no field empty!");
            txtPwLength.requestFocus();
        } else {
            pwLength = Integer.parseInt(txtPwLength.getText());
            charset = txtCharSet.getText();
            chainTable = Integer.parseInt(txtChainTable.getText());
            chainLength = Integer.parseInt(txtChainLength.getText());
            rmDuplicateChar = removeDuplicates(charset);//remove duplicate number 
            System.out.println(rmDuplicateChar);
            calculation c = new calculation(rmDuplicateChar, pwLength, chainTable, chainLength);
            int possibleOutcome = c.calcPossiblePassword();
            System.out.println("Possible Outcomes: " + possibleOutcome);
            System.out.println("Rainbow Table Size: " + chainTable * chainLength);

            try {
                c.createTable();
            } catch (NoSuchAlgorithmException | IOException ex) {
                JOptionPane.showMessageDialog(null, "There's an error on " + ex);
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnCrackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrackActionPerformed
        // TODO add your handling code here:
        String txtInputHash = txtHash.getText();
        if (txtHashTable.getText().isEmpty() || txtHash.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please leave no field empty!");
            txtHashTable.requestFocus();
        } else {
            if (txtInputHash.length() == 40) {
                pwLength = Integer.parseInt(txtPwLength.getText());
                charset = txtCharSet.getText();
                chainTable = Integer.parseInt(txtChainTable.getText());
                chainLength = Integer.parseInt(txtChainLength.getText());
                calculation c = new calculation(rmDuplicateChar, pwLength, chainTable, chainLength);
                file = txtHashTable.getText();//get File name
                hash = txtHash.getText();//get Hash

                try {
                    c.readFromFile(file + ".ser");
                    c.readTable(hash, txtPassword);
                } catch (NoSuchAlgorithmException | UnsupportedEncodingException ex) {
                    JOptionPane.showMessageDialog(null, "There's an error on " + ex);
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Table not Found!");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Incorrect SHA1 Format");
            }
        }
    }//GEN-LAST:event_btnCrackActionPerformed

    private void btnCrackRainbowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrackRainbowActionPerformed
        if (txtPwLength.getText().isEmpty() || txtCharSet.getText().isEmpty() || txtChainTable.getText().isEmpty() || txtChainLength.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please leave no field empty!");
            txtPwLength.requestFocus();
            txtPwLength.requestFocus();
        } else {
            visibleA(true);
            visibleB(false);
            setSize(565, 480);
            txtHashTable.requestFocus();
        }
    }//GEN-LAST:event_btnCrackRainbowActionPerformed

    public void visibleA(boolean value) {
        txtHashTable.setEnabled(value);
        txtHash.setEnabled(value);
        btnCrack.setEnabled(value);
        btnBack.setEnabled(value);
    }

    public void visibleB(boolean value) {
        txtPwLength.setEnabled(value);
        txtCharSet.setEnabled(value);
        txtChainTable.setEnabled(value);
        txtChainLength.setEnabled(value);
    }

    public void clearField() {
        txtPwLength.setText("");
        txtCharSet.setText("");
        txtChainTable.setText("");
        txtChainLength.setText("");
        txtHashTable.setText("");
        txtHash.setText("");
        txtPassword.setText("");
        txtPwLength.requestFocus();
    }

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        setSize(565, 255);
        visibleA(false);
        visibleB(true);
        clearField();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtPwLengthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPwLengthKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && (evt.getKeyChar() != KeyEvent.VK_BACKSPACE) && (evt.getKeyChar() != KeyEvent.VK_ENTER)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtPwLengthKeyTyped

    private void txtChainTableKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChainTableKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && (evt.getKeyChar() != KeyEvent.VK_BACKSPACE) && (evt.getKeyChar() != KeyEvent.VK_ENTER)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtChainTableKeyTyped

    private void txtChainLengthKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtChainLengthKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()) && (evt.getKeyChar() != KeyEvent.VK_BACKSPACE) && (evt.getKeyChar() != KeyEvent.VK_ENTER)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtChainLengthKeyTyped

    public String removeDuplicates(String input) {
        String result = "";
        for (int i = 0; i < input.length(); i++) {
            if (!result.contains(String.valueOf(input.charAt(i)))) {
                result += String.valueOf(input.charAt(i));
            }
        }
        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCrack;
    private javax.swing.JButton btnCrackRainbow;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtChainLength;
    private javax.swing.JTextField txtChainTable;
    private javax.swing.JTextField txtCharSet;
    private javax.swing.JTextField txtHash;
    private javax.swing.JTextField txtHashTable;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPwLength;
    // End of variables declaration//GEN-END:variables

}
